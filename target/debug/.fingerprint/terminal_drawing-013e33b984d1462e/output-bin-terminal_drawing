{"$message_type":"diagnostic","message":"unresolved import `rand`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":29,"byte_end":33,"line_start":2,"line_end":2,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"use rand::{thread_rng, RNG};","highlight_start":5,"highlight_end":9}],"label":"use of undeclared crate or module `rand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/main.rs:2:5: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m: unresolved import `rand`: use of undeclared crate or module `rand`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unneeded unit return type","code":{"code":"clippy::unused_unit","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1403,"byte_end":1409,"line_start":70,"line_end":70,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"fn draw_buffer(buffer : &DrawBuffer) -> ()","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::unused_unit)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the `-> ()`","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1403,"byte_end":1409,"line_start":70,"line_end":70,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"fn draw_buffer(buffer : &DrawBuffer) -> ()","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:70:37: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unneeded unit return type: help: remove the `-> ()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unneeded unit return type","code":{"code":"clippy::unused_unit","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":2399,"byte_end":2405,"line_start":103,"line_end":103,"column_start":56,"column_end":62,"is_primary":true,"text":[{"text":"fn draw_point(buffer : &mut DrawBuffer, point : &Point) -> ()","highlight_start":56,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove the `-> ()`","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2399,"byte_end":2405,"line_start":103,"line_end":103,"column_start":56,"column_end":62,"is_primary":true,"text":[{"text":"fn draw_point(buffer : &mut DrawBuffer, point : &Point) -> ()","highlight_start":56,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:103:56: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unneeded unit return type: help: remove the `-> ()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unneeded unit return type","code":{"code":"clippy::unused_unit","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":2677,"byte_end":2683,"line_start":110,"line_end":110,"column_start":64,"column_end":70,"is_primary":true,"text":[{"text":"fn draw_triangle(buffer : &mut DrawBuffer, triangle : Triangle) -> ()","highlight_start":64,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove the `-> ()`","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2677,"byte_end":2683,"line_start":110,"line_end":110,"column_start":64,"column_end":70,"is_primary":true,"text":[{"text":"fn draw_triangle(buffer : &mut DrawBuffer, triangle : Triangle) -> ()","highlight_start":64,"highlight_end":70}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:110:64: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unneeded unit return type: help: remove the `-> ()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"value assigned to `num_tri_floor_pieces` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":4106,"byte_end":4126,"line_start":186,"line_end":186,"column_start":10,"column_end":30,"is_primary":true,"text":[{"text":"\tlet mut num_tri_floor_pieces : u8 = 0; //honestly could be a bool but who cares","highlight_start":10,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:186:10: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: value assigned to `num_tri_floor_pieces` is never read\u001b[0m\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error; 4 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m: aborting due to 1 previous error; 4 warnings emitted\u001b[0m\n"}
